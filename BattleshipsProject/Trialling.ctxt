#BlueJ class context
comment0.target=Trialling
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment10.params=h\ w\ pGrid\ cGrid
comment10.target=void\ gridPrinter(int,\ int,\ java.lang.String[][],\ java.lang.String[][])
comment11.params=grid\ blank\ letters\ h\ w
comment11.target=java.lang.String[][]\ gridFiller(java.lang.String[][],\ java.lang.String,\ java.lang.String[],\ int,\ int)
comment2.params=msg1\ msg2\ msg3\ placingX
comment2.target=int\ getXInput(java.lang.String,\ java.lang.String,\ java.lang.String,\ int)
comment2.text=\r\n\ Takes\ player\ input\ for\ an\ x\ coordinate\ and\ checks\ that\ it\ is\ valid\r\n\ Has\ to\ be\ an\ integer\ and\ between\ 1\ and\ 10\r\n\ If\ it\ fails\ an\ error\ message\ is\ printed\ and\ a\ new\ coordinate\ is\ requested\r\n\ Once\ it\ has\ recieved\ valid\ input\ it\ returns\ the\ input\r\n
comment3.params=letters
comment3.target=int\ getYInput(java.lang.String[])
comment3.text=\r\n\ Takes\ player\ input\ for\ an\ y\ coordinate\ and\ checks\ that\ it\ is\ valid\r\n\ Has\ to\ be\ included\ in\ the\ array\ of\ letters\ (A-J)\r\n\ If\ it\ fails\ an\ error\ message\ is\ printed\ and\ a\ new\ coordinate\ is\ requested\r\n\ Once\ it\ has\ recieved\ valid\ input\ it\ converts\ it\ to\ a\ number\ and\ returns\ the\ number\r\n
comment4.params=msg
comment4.target=void\ winMessage(java.lang.String)
comment4.text=\r\n\ Prints\ out\ a\ win\ message\ depending\ on\ whether\ player\ or\ computer\ won\r\n
comment5.params=grid\ ship\ h\ w
comment5.target=boolean\ playerWinChecker(java.lang.String[][],\ java.lang.String,\ int,\ int)
comment5.text=\r\n\ Checks\ if\ the\ player\ has\ won\r\n\ For\ each\ tile\ on\ the\ grid,\ if\ it\ contains\ a\ ship,\ add\ 1\ to\ n\r\n\ If\ n\ equals\ 0\ then\ there\ are\ no\ ships\ left\ and\ therefore\ the\ player\ has\ won\r\n\ Otherwise\ there\ are\ still\ ships\ left\ and\ the\ player\ hasn't\ won\r\n
comment6.params=grid\ ship\ h\ w
comment6.target=boolean\ computerWinChecker(java.lang.String[][],\ java.lang.String,\ int,\ int)
comment6.text=\r\n\ Checks\ if\ the\ computer\ has\ won\r\n\ For\ each\ tile\ on\ the\ grid,\ if\ it\ contains\ a\ ship,\ add\ 1\ to\ n\r\n\ If\ n\ equals\ 0\ then\ there\ are\ no\ ships\ left\ and\ therefore\ the\ computer\ has\ won\r\n\ Otherwise\ there\ are\ still\ ships\ left\ and\ the\ computer\ hasn't\ won\r\n
comment7.params=grid\ h\ w\ ship
comment7.target=boolean\ sunkShipChecker(java.lang.String[][],\ int,\ int,\ java.lang.String)
comment7.text=\r\n\ Takes\ the\ tile\ that\ has\ just\ been\ hit\r\n\ For\ each\ tile\ on\ the\ grid,\ if\ it\ contains\ that\ ship,\ add\ 1\ to\ n\r\n\ If\ n\ equals\ 0\ then\ there\ is\ none\ of\ that\ ship\ left\ and\ therefore\ the\ ship\ has\ been\ sunk\r\n\ Otherwise\ there\ is\ still\ some\ of\ that\ ship\ left\ and\ it\ hasnt\ been\ sunk\r\n
comment8.params=grid\ SHIPS\ ship\ letters
comment8.target=java.lang.String[][]\ computerShipPlacement(java.lang.String[][],\ int,\ java.lang.String,\ java.lang.String[])
comment9.params=x\ y\ dir\ length\ ship\ grid
comment9.target=java.lang.String[][]\ shipPlacement(int,\ int,\ java.lang.String,\ int,\ java.lang.String,\ java.lang.String[][])
numComments=12
